"""add data connectors

Revision ID: 3cf2adf9896b
Revises: a11752a5afba
Create Date: 2024-09-05 14:20:47.006275

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "3cf2adf9896b"
down_revision = "a11752a5afba"
branch_labels = None
depends_on = None


def upgrade() -> None:
    visibility = postgresql.ENUM(name="visibility", create_type=False)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_connectors",
        sa.Column("id", sa.String(length=26), nullable=False),
        sa.Column("name", sa.String(length=99), nullable=False),
        sa.Column("visibility", visibility, nullable=False),
        sa.Column("storage_type", sa.String(length=20), nullable=False),
        sa.Column(
            "configuration",
            sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"),
            nullable=False,
        ),
        sa.Column("source_path", sa.String(), nullable=False),
        sa.Column("target_path", sa.String(), nullable=False),
        sa.Column("created_by_id", sa.String(length=36), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("keywords", postgresql.ARRAY(sa.String(length=99)), nullable=True),
        sa.Column("readonly", sa.Boolean(), nullable=False),
        sa.Column("creation_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.users.keycloak_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="storage",
    )
    op.create_index(
        op.f("ix_storage_data_connectors_created_by_id"),
        "data_connectors",
        ["created_by_id"],
        unique=False,
        schema="storage",
    )
    op.add_column("entity_slugs", sa.Column("data_connector_id", sa.String(length=26), nullable=True), schema="common")
    op.alter_column("entity_slugs", "project_id", existing_type=sa.String(length=26), nullable=True, schema="common")
    op.create_index(
        op.f("ix_common_entity_slugs_data_connector_id"),
        "entity_slugs",
        ["data_connector_id"],
        unique=False,
        schema="common",
    )
    op.create_foreign_key(
        "entity_slugs_data_connector_id_fk",
        "entity_slugs",
        "data_connectors",
        ["data_connector_id"],
        ["id"],
        source_schema="common",
        referent_schema="storage",
        ondelete="CASCADE",
    )
    op.create_table(
        "data_connector_secrets",
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column("data_connector_id", sa.String(length=26), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("secret_id", sa.String(length=26), nullable=False),
        sa.ForeignKeyConstraint(["data_connector_id"], ["storage.data_connectors.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["secret_id"], ["secrets.secrets.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.users.keycloak_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "data_connector_id", "name"),
        schema="storage",
    )
    op.create_index(
        "ix_storage_data_connector_secrets_user_id_data_connector_id",
        "data_connector_secrets",
        ["user_id", "data_connector_id"],
        unique=False,
        schema="storage",
    )
    op.drop_index(
        "ix_storage_cloud_storage_secrets_user_id_storage_id", table_name="cloud_storage_secrets", schema="storage"
    )
    op.drop_table("cloud_storage_secrets", schema="storage")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cloud_storage_secrets",
        sa.Column("user_id", sa.String(length=36), autoincrement=False, nullable=False),
        sa.Column("storage_id", sa.String(length=26), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=99), autoincrement=False, nullable=False),
        sa.Column("secret_id", sa.String(length=26), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["secret_id"], ["secrets.secrets.id"], name="cloud_storage_secrets_secret_id_fkey", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["storage_id"],
            ["storage.cloud_storage.storage_id"],
            name="cloud_storage_secrets_storage_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.users.keycloak_id"], name="cloud_storage_secrets_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_id", "storage_id", "name", name="_unique_user_id_storage_id_name"),
        schema="storage",
    )
    op.create_index(
        "ix_storage_cloud_storage_secrets_user_id_storage_id",
        "cloud_storage_secrets",
        ["user_id", "storage_id"],
        unique=False,
        schema="storage",
    )
    op.drop_index(
        "ix_storage_data_connector_secrets_user_id_data_connector_id",
        table_name="data_connector_secrets",
        schema="storage",
    )
    op.drop_table("data_connector_secrets", schema="storage")
    op.drop_constraint("entity_slugs_data_connector_id_fk", "entity_slugs", schema="common", type_="foreignkey")
    op.drop_index(op.f("ix_common_entity_slugs_data_connector_id"), table_name="entity_slugs", schema="common")
    op.alter_column("entity_slugs", "project_id", existing_type=sa.String(length=26), nullable=False, schema="common")
    op.drop_column("entity_slugs", "data_connector_id", schema="common")
    op.drop_index(op.f("ix_storage_data_connectors_created_by_id"), table_name="data_connectors", schema="storage")
    op.drop_table("data_connectors", schema="storage")
    # ### end Alembic commands ###
