"""add bitbucket support

Revision ID: 33561ece81e5
Revises: c0631477aea4
Create Date: 2024-06-10 08:30:48.029894

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "33561ece81e5"
down_revision = "c0631477aea4"
branch_labels = None
depends_on = None

# Update the "ProviderKind" enum
old_kinds = ["gitlab", "github"]
new_kinds = list(old_kinds) + ["bitbucket"]

old_type = sa.Enum(*old_kinds, name="providerkind")
new_type = sa.Enum(*new_kinds, name="providerkind")
temp_type = sa.Enum(*new_kinds, name="providerkind_tmp")
temp_type_downgrade = sa.Enum(*old_kinds, name="providerkind_tmp")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    temp_type.create(op.get_bind())
    op.alter_column(
        "oauth2_clients",
        "kind",
        type_=temp_type,
        postgresql_using="kind::text::providerkind_tmp",
        schema="connected_services",
    )
    op.execute("DROP TYPE providerkind")
    new_type.create(op.get_bind())
    op.alter_column(
        "oauth2_clients",
        "kind",
        type_=new_type,
        postgresql_using="kind::text::providerkind",
        schema="connected_services",
    )
    op.execute("DROP TYPE providerkind_tmp")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Update rows where kind = "bitbucket"
    table = sa.sql.table("oauth2_clients", sa.Column("kind", new_type), schema="connected_services")
    op.execute(table.update().where(table.columns.kind == "bitbucket").values(kind="gitlab"))

    temp_type_downgrade.create(op.get_bind())
    op.alter_column(
        "oauth2_clients",
        "kind",
        type_=temp_type_downgrade,
        postgresql_using="kind::text::providerkind_tmp",
        schema="connected_services",
    )
    op.execute("DROP TYPE providerkind")
    old_type.create(op.get_bind())
    op.alter_column(
        "oauth2_clients",
        "kind",
        type_=old_type,
        postgresql_using="kind::text::providerkind",
        schema="connected_services",
    )
    op.execute("DROP TYPE providerkind_tmp")
    pass
    # ### end Alembic commands ###
