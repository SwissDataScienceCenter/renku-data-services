"""create namespace tables

Revision ID: 16dafb6b6535
Revises: bfdf48f5ed85
Create Date: 2024-03-12 13:49:44.592594

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "16dafb6b6535"
down_revision = "bfdf48f5ed85"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project_slugs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("latest_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["latest_id"], ["projects.project_slugs.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="projects",
    )
    op.create_index(
        op.f("ix_projects_project_slugs_latest_id"), "project_slugs", ["latest_id"], unique=False, schema="projects"
    )
    op.create_index(op.f("ix_projects_project_slugs_slug"), "project_slugs", ["slug"], unique=True, schema="projects")
    op.create_index(
        "project_slugs_one_is_latest",
        "project_slugs",
        ["slug", "latest_id"],
        unique=True,
        schema="projects",
        postgresql_where="latest_id is NULL",
    )
    op.create_table(
        "groups",
        sa.Column("id", sa.String(length=26), nullable=False),
        sa.Column("name", sa.String(length=99), nullable=False),
        sa.Column("namespace_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("creation_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ["namespace_id"],
            ["users.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="common",
    )
    op.create_index(op.f("ix_common_groups_name"), "groups", ["name"], unique=False, schema="common")
    op.create_index(op.f("ix_common_groups_namespace_id"), "groups", ["namespace_id"], unique=False, schema="common")
    op.create_table(
        "group_members",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column("role", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.String(length=26), nullable=True),
        sa.ForeignKeyConstraint(["group_id"], ["common.groups.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="common",
    )
    op.create_index(
        op.f("ix_common_group_members_group_id"), "group_members", ["group_id"], unique=False, schema="common"
    )
    op.create_index(
        op.f("ix_common_group_members_user_id"), "group_members", ["user_id"], unique=False, schema="common"
    )
    op.create_table(
        "namespaces",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("latest_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("group_id", sa.String(length=26), nullable=True),
        sa.CheckConstraint("num_nulls(user_id, group_id) = 1", name="only_one_null_in_group_user_id"),
        sa.ForeignKeyConstraint(["group_id"], ["common.groups.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["latest_id"], ["common.namespaces.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="common",
    )
    op.create_index(op.f("ix_common_namespaces_group_id"), "namespaces", ["group_id"], unique=False, schema="common")
    op.create_index(op.f("ix_common_namespaces_latest_id"), "namespaces", ["latest_id"], unique=False, schema="common")
    op.create_index(op.f("ix_common_namespaces_slug"), "namespaces", ["slug"], unique=True, schema="common")
    op.create_index(op.f("ix_common_namespaces_user_id"), "namespaces", ["user_id"], unique=False, schema="common")
    op.create_index(
        "namespaces_one_slug_is_latest",
        "namespaces",
        ["slug", "latest_id"],
        unique=True,
        schema="common",
        postgresql_where="latest_id is NULL",
    )
    op.add_column("projects", sa.Column("namespace_id", sa.Integer(), nullable=False), schema="projects")
    op.add_column("projects", sa.Column("slug_id", sa.Integer(), nullable=False), schema="projects")
    op.create_index(
        op.f("ix_projects_projects_namespace_id"), "projects", ["namespace_id"], unique=False, schema="projects"
    )
    op.create_index(op.f("ix_projects_projects_slug_id"), "projects", ["slug_id"], unique=False, schema="projects")
    op.create_index(
        "projects_unique_namespace_slug", "projects", ["namespace_id", "slug_id"], unique=True, schema="projects"
    )
    op.create_foreign_key(
        "projects_projects_namespace_id_fk",
        "projects",
        "namespaces",
        ["namespace_id"],
        ["id"],
        source_schema="projects",
        referent_schema="common",
    )
    op.create_foreign_key(
        "projects_projects_slug_id_fk",
        "projects",
        "project_slugs",
        ["slug_id"],
        ["id"],
        source_schema="projects",
        referent_schema="projects",
    )
    op.drop_column("projects", "slug", schema="projects")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "projects", sa.Column("slug", sa.VARCHAR(length=99), autoincrement=False, nullable=False), schema="projects"
    )
    op.drop_constraint("projects_projects_slug_id_fk", "projects", schema="projects", type_="foreignkey")
    op.drop_constraint("projects_projects_namespace_id_fk", "projects", schema="projects", type_="foreignkey")
    op.drop_index("projects_unique_namespace_slug", table_name="projects", schema="projects")
    op.drop_index(op.f("ix_projects_projects_slug_id"), table_name="projects", schema="projects")
    op.drop_index(op.f("ix_projects_projects_namespace_id"), table_name="projects", schema="projects")
    op.drop_column("projects", "slug_id", schema="projects")
    op.drop_column("projects", "namespace_id", schema="projects")
    op.drop_index(
        "namespaces_one_slug_is_latest", table_name="namespaces", schema="common", postgresql_where="latest_id is NULL"
    )
    op.drop_index(op.f("ix_common_namespaces_user_id"), table_name="namespaces", schema="common")
    op.drop_index(op.f("ix_common_namespaces_slug"), table_name="namespaces", schema="common")
    op.drop_index(op.f("ix_common_namespaces_latest_id"), table_name="namespaces", schema="common")
    op.drop_index(op.f("ix_common_namespaces_group_id"), table_name="namespaces", schema="common")
    op.drop_table("namespaces", schema="common")
    op.drop_index(op.f("ix_common_group_members_user_id"), table_name="group_members", schema="common")
    op.drop_index(op.f("ix_common_group_members_group_id"), table_name="group_members", schema="common")
    op.drop_table("group_members", schema="common")
    op.drop_index(op.f("ix_common_groups_namespace_id"), table_name="groups", schema="common")
    op.drop_index(op.f("ix_common_groups_name"), table_name="groups", schema="common")
    op.drop_table("groups", schema="common")
    op.drop_index(
        "project_slugs_one_is_latest",
        table_name="project_slugs",
        schema="projects",
        postgresql_where="latest_id is NULL",
    )
    op.drop_index(op.f("ix_projects_project_slugs_slug"), table_name="project_slugs", schema="projects")
    op.drop_index(op.f("ix_projects_project_slugs_latest_id"), table_name="project_slugs", schema="projects")
    op.drop_table("project_slugs", schema="projects")
    # ### end Alembic commands ###
