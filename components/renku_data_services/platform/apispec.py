# generated by datamodel-codegen:
#   filename:  api.spec.yaml
#   timestamp: 2025-03-19T10:21:15+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field, RootModel
from renku_data_services.platform.apispec_base import BaseAPISpec


class Error(BaseAPISpec):
    code: int = Field(..., examples=[1404], gt=0)
    detail: Optional[str] = Field(
        None, examples=["A more detailed optional message showing what the problem was"]
    )
    message: str = Field(
        ..., examples=["Something went wrong - please try again later"]
    )


class ErrorResponse(BaseAPISpec):
    error: Error


class PlatformConfig(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    etag: str = Field(
        ..., description="Entity Tag", examples=["9EE498F9D565D0C41E511377425F32F3"]
    )
    incident_banner: str = Field(
        ...,
        description="The contents of the incident banner.\nThis value accepts content written using Markdown.\n",
        examples=["RenkuLab is experiencing issues, some features may be unavailable."],
    )


class PlatformConfigPatch(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    incident_banner: Optional[str] = Field(
        None,
        description="The contents of the incident banner.\nThis value accepts content written using Markdown.\n",
        examples=["RenkuLab is experiencing issues, some features may be unavailable."],
    )
