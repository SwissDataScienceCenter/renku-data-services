# generated by datamodel-codegen:
#   filename:  api.spec.yaml
#   timestamp: 2024-03-19T16:56:42+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import ConfigDict, Field, RootModel
from renku_data_services.secrets_storage.secret.apispec_base import BaseAPISpec


class Error(BaseAPISpec):
    code: int = Field(..., example=1404, gt=0)
    detail: Optional[str] = Field(None, example="A more detailed optional message showing what the problem was")
    message: str = Field(..., example="Something went wrong - please try again later")


class ErrorResponse(BaseAPISpec):
    error: Error


class Secret(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(..., description="ULID identifier", max_length=26, min_length=26, pattern="^[A-Z0-9]{26}$")
    name: str = Field(
        ...,
        description="Secret name",
        example="Data-S3-Secret_1",
        max_length=99,
        min_length=1,
        pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
    )
    modification_date: datetime = Field(
        ...,
        description="The date and time the secret was created or modified (this is always in UTC)",
        example="2023-11-01T17:32:28Z",
    )
    value: str = Field(..., description="Secret value that can be any text", max_length=5000)


class SecretPost(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str = Field(
        ...,
        description="Secret name",
        example="Data-S3-Secret_1",
        max_length=99,
        min_length=1,
        pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
    )
    value: str = Field(..., description="Secret value that can be any text", max_length=5000)


class SecretPatch(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: Optional[str] = Field(
        None,
        description="Secret name",
        example="Data-S3-Secret_1",
        max_length=99,
        min_length=1,
        pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
    )
    value: Optional[str] = Field(None, description="Secret value that can be any text", max_length=5000)


class SecretsList(RootModel[List[Secret]]):
    root: List[Secret] = Field(..., description="A list of secrets", min_length=0)
