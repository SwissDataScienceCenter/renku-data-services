
openapi: 3.0.2
info:
  title: Renku Secrets Storage
  description: |
    A service to retrieve encrypted user secrets and make them available to users (in sessions or elsewhere).
    This is only available to internal services.
  version: 0.1.0
servers:
  - url: /api/secrets
paths:
  /kubernetes:
    post:
      summary: Create a k8s secret containing partially decrypted secrets.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/K8sSecret"
      responses:
        "201":
          description: K8s secret successfully created
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/K8sSecretName"
        default:
          $ref: '#/components/responses/Error'
      tags:
        - secrets
  /version:
    get:
      summary: Get the version of the service
      responses:
        "200":
          description: The error
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Version"
components:
  schemas:
    K8sSecret:
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: "#/components/schemas/K8sSecretName"
        namespace:
          type: string
          description: The namespace of the k8s secret to create
          example: renku
        secret_ids:
          description: The ids of the secrets to include
          type: array
          items:
            $ref: "#/components/schemas/Ulid"
          minItems: 1
        owner_references:
          description: The resource in K8s that owns this secret
          type: array
          items:
            type: object
            additionalProperties:
              anyOf:
                - type: string
                - type: boolean
          example:
            - apiVersion: amalthea.dev/v1alpha1
              kind: JupyterServer
              name: renku-1234
              uid: c9328118-8d32-41b4-b9bd-1437880c95a2
              controller: true
      required:
        - name
        - namespace
        - secret_ids
        - owner
    K8sSecretName:
      type: string
      description: The name of the k8s secret to create
      example: john-doe-session-57-secret
    Version:
      type: object
      properties:
        version:
          type: string
      required: ["version"]
    Ulid:
      description: ULID identifier
      type: string
      minLength: 26
      maxLength: 26
      pattern: "^[A-Z0-9]{26}$"  # This is case-insensitive
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              minimum: 0
              exclusiveMinimum: true
              example: 1404
            detail:
              type: string
              example: "A more detailed optional message showing what the problem was"
            message:
              type: string
              example: "Something went wrong - please try again later"
          required: ["code", "message"]
      required: ["error"]
  responses:
    Error:
      description: The schema for all 4xx and 5xx responses
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
