# generated by datamodel-codegen:
#   filename:  api.spec.yaml
#   timestamp: 2024-02-11T15:26:05+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import ConfigDict, Field, RootModel

from renku_data_services.session.apispec_base import BaseAPISpec


class Tag(RootModel[str]):
    root: str = Field(..., description="A tag", example="my renku session", max_length=99, min_length=1)


class Status(Enum):
    inactive = "inactive"
    launching = "launching"
    running = "running"
    error = "error"
    paused = "paused"
    stopping = "stopping"


class Error(BaseAPISpec):
    code: int = Field(..., example=1404, gt=0)
    detail: Optional[str] = Field(None, example="A more detailed optional message showing what the problem was")
    message: str = Field(..., example="Something went wrong - please try again later")


class ErrorResponse(BaseAPISpec):
    error: Error


class Session(BaseAPISpec):
    id: str = Field(..., description="ULID identifier", max_length=26, min_length=26, pattern="^[A-Z0-9]{26}$")
    name: str = Field(..., description="Renku session name", example="My Renku Session :)", max_length=99, min_length=1)
    creation_date: datetime = Field(
        ...,
        description="The date and time the session was created (time is always in UTC)",
        example="2023-11-01T17:32:28Z",
    )
    description: Optional[str] = Field(None, description="A description for session", max_length=500)
    environment_id: str = Field(
        ...,
        description="Id of the environment to create a session from, or content of a Dockerfile",
        example=["01AN4Z79ZS6XX96588FDX0H099", "FROM ${RENKU_BASE_IMAGE} as builder\nARG RENKU_VERSION=2.7.0\n...\n"],
        min_length=1,
    )
    status: Status
    tags: Optional[List[Tag]] = Field(None, description="A list of tags", min_length=0)


class SessionPost(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str = Field(..., description="Renku session name", example="My Renku Session :)", max_length=99, min_length=1)
    description: Optional[str] = Field(None, description="A description for session", max_length=500)
    environment_id: str = Field(
        ...,
        description="Id of the environment to create a session from, or content of a Dockerfile",
        example=["01AN4Z79ZS6XX96588FDX0H099", "FROM ${RENKU_BASE_IMAGE} as builder\nARG RENKU_VERSION=2.7.0\n...\n"],
        min_length=1,
    )
    tags: Optional[List[Tag]] = Field(None, description="A list of tags", min_length=0)


class SessionPatch(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: Optional[str] = Field(
        None, description="Renku session name", example="My Renku Session :)", max_length=99, min_length=1
    )
    description: Optional[str] = Field(None, description="A description for session", max_length=500)
    tags: Optional[List[Tag]] = Field(None, description="A list of tags", min_length=0)


class SessionsList(RootModel[List[Session]]):
    root: List[Session] = Field(..., description="A list of Renku sessions", min_length=0)
