"""Custom resource definition with proper names from the autogenerated code."""

from datetime import datetime

from pydantic import BaseModel, Field

from renku_data_services.session.cr_shipwright_buildrun import Build, Git, ParamValue, Strategy
from renku_data_services.session.cr_shipwright_buildrun import Model as _BuildRun
from renku_data_services.session.cr_shipwright_buildrun import Output as BuildOutput
from renku_data_services.session.cr_shipwright_buildrun import Source as BuildSource
from renku_data_services.session.cr_shipwright_buildrun import Spec as BuildRunSpec
from renku_data_services.session.cr_shipwright_buildrun import Spec1 as BuildSpec
from renku_data_services.session.cr_tekton_taskrun import TaskRunBase as _TaskRunBase


class Metadata(BaseModel):
    """Basic k8s metadata spec."""

    class Config:
        """Do not exclude unknown properties."""

        extra = "allow"

    name: str
    namespace: str | None = None
    labels: dict[str, str] = Field(default_factory=dict)
    annotations: dict[str, str] = Field(default_factory=dict)
    uid: str | None = None
    creationTimestamp: datetime | None = None
    deletionTimestamp: datetime | None = None


class BuildRun(_BuildRun):
    """Shipwright BuildRun."""

    kind: str = "BuildRun"
    apiVersion: str = "shipwright.io/v1beta1"
    # Here we overwrite the default from ASModel because it is too weakly typed
    metadata: Metadata  # type: ignore[assignment]


class GitSource(BuildSource):
    """Git repository as a source for builds."""

    type: str = "Git"
    git: Git


class TaskRun(_TaskRunBase):
    """Tekton TaskRun."""

    metadata: Metadata
