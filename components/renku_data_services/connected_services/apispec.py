# generated by datamodel-codegen:
#   filename:  api.spec.yaml
#   timestamp: 2024-04-22T09:10:41+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import ConfigDict, Field, RootModel
from renku_data_services.connected_services.apispec_base import BaseAPISpec


class Error(BaseAPISpec):
    code: int = Field(..., example=1404, gt=0)
    detail: Optional[str] = Field(
        None, example="A more detailed optional message showing what the problem was"
    )
    message: str = Field(..., example="Something went wrong - please try again later")


class ErrorResponse(BaseAPISpec):
    error: Error


class AdminProvider(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(..., example="some-id")
    clientId: str = Field(..., example="some-client-id")
    displayName: str = Field(..., example="my oauth2 application")


class AdminProviderPost(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(..., example="some-id")
    clientId: str = Field(..., example="some-client-id")
    displayName: str = Field(..., example="my oauth2 application")


class Provider(BaseAPISpec):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(..., example="some-id")
    displayName: str = Field(..., example="my oauth2 application")


class AdminProviderList(RootModel[List[AdminProvider]]):
    root: List[AdminProvider]


class ProviderList(RootModel[List[Provider]]):
    root: List[Provider]
