openapi: 3.0.2
info:
  title: Renku Connected Services
  description: |
    Service which allows users to connect to services hosted on third-party platforms.
  version: 0.0.1
servers:
  - url: /api/data
  - url: /ui-server/api/data
paths:
  /oauth2/providers:
    get:
      summary: Get all OAuth2 Clients
      description: Get the list of available OAuth2 Clients.
      responses:
        "200":
          description: The list of providers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProviderList"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/providers/{provider}:
    get:
      summary: Get an OAuth2 Client
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provider"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/providers/{provider}/authorize:
    get:
      summary: Authorize an OAuth2 Client
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "301":
          description: The authorization URL for this OAuth2 Client.
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/admin/providers:
    get:
      summary: Get all OAuth2 Clients
      description: Get the list of available OAuth2 Clients (admin view).
      responses:
        "200":
          description: The list of providers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProviderList"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
    post:
      summary: Create a new OAuth2 Client
      description: Create a new OAuth2 Client by sending a configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/AdminProviderPost"
      responses:
        "201":
          description: The OAuth2 Client was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProvider"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/admin/providers/{provider}:
    get:
      summary: Get an OAuth2 Client
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProvider"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
    patch:
      summary: Update specific fields of an OAuth2 Client
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminProviderPatch"
      responses:
        "200":
          description: The updated OAuth2 Client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProvider"
        "404":
          description: The OAuth2 Client does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
    delete:
      summary: Remove an OAuth2 Client
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The OAuth2 Client was removed or did not exist in the first place
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
components:
  schemas:
    AdminProviderList:
      type: array
      items:
        $ref: "#/components/schemas/AdminProvider"
    AdminProvider:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/ProviderId"
        client_id:
          $ref: "#/components/schemas/ClientId"
        display_name:
          $ref: "#/components/schemas/DisplayName"
      required:
        - id
        - client_id
        - display_name
    AdminProviderPost:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/ProviderId"
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        display_name:
          $ref: "#/components/schemas/DisplayName"
      required:
        - id
        - client_id
        - display_name
    AdminProviderPatch:
      type: object
      additionalProperties: false
      properties:
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        display_name:
          $ref: "#/components/schemas/DisplayName"
    ProviderList:
      type: array
      items:
        $ref: "#/components/schemas/Provider"
    Provider:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/ProviderId"
        display_name:
          $ref: "#/components/schemas/DisplayName"
      required:
        - id
        - display_name
    ProviderId:
      type: string
      example: "some-id"
    ClientId:
      type: string
      example: "some-client-id"
    ClientSecret:
      type: string
      example: "some-client-secret"
    DisplayName:
      type: string
      example: "my oauth2 application"
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              minimum: 0
              exclusiveMinimum: true
              example: 1404
            detail:
              type: string
              example: "A more detailed optional message showing what the problem was"
            message:
              type: string
              example: "Something went wrong - please try again later"
          required:
            - "code"
            - "message"
      required:
        - "error"
  responses:
    Error:
      description: The schema for all 4xx and 5xx responses
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
