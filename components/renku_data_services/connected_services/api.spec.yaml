openapi: 3.0.2
info:
  title: Renku Group Management Service
  description: |
    Service that allows creating, updating, deleting, and managing Renku v2 groups.
    All errors have the same format as the schema called ErrorResponse.
  version: 0.1.0
servers:
  - url: /api/data
  - url: /ui-server/api/data
paths:
  /oauth2/providers:
    get:
      summary: Get all OAuth2 Clients
      description: Get the list of available OAuth2 Clients.
      responses:
        "200":
          description: The list of providers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProviderList"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
    post:
      summary: Create a new OAuth2 Client
      description: Create a new OAuth2 Client by sending a configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProviderPost"
      responses:
        "201":
          description: The OAuth2 Client was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provider"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/providers/{provider_id}:
    get:
      summary: Get an OAuth2 Client
      parameters:
        - in: path
          name: provider_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provider"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
    patch:
      summary: Update specific fields of an OAuth2 Client
      parameters:
        - in: path
          name: provider_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProviderPatch"
      responses:
        "200":
          description: The updated OAuth2 Client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provider"
        "404":
          description: The OAuth2 Client does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
    delete:
      summary: Remove an OAuth2 Client
      parameters:
        - in: path
          name: provider_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The OAuth2 Client was removed or did not exist in the first place
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/providers/{provider_id}/authorize:
    get:
      summary: Authorize an OAuth2 Client
      description: |
        Starts the OAuth2 authorization flow (authorization code grant).
        Note that this will create a new connection entity for the currently authenticated user.
      parameters:
        - in: path
          name: provider_id
          required: true
          schema:
            type: string
        - in: query
          name: next_url
          schema:
            description: The URL to redirect the user to once the authorization flow has been completed.
            type: string
      responses:
        "302":
          description: The authorization URL for this OAuth2 Client.
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/connections:
    get:
      summary: Get all OAuth2 connections
      description: Get the list of all connected services for the current user.
      responses:
        "200":
          description: The list of connections.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionList"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/connections/{connection_id}:
    get:
      summary: Get an OAuth2 connection
      parameters:
        - in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
  /oauth2/connections/{connection_id}/account:
    get:
      summary: Get the account information for this OAuth2 connection for the currently authenticated user if their account is connected
      parameters:
        - in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedAccount"
        default:
          $ref: "#/components/responses/Error"
      tags:
        - oauth2
components:
  schemas:
    ProviderList:
      type: array
      items:
        $ref: "#/components/schemas/Provider"
    Provider:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/ProviderId"
        kind:
          $ref: "#/components/schemas/ProviderKind"
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        display_name:
          $ref: "#/components/schemas/DisplayName"
        scope:
          $ref: "#/components/schemas/ApiScope"
        url:
          $ref: "#/components/schemas/ProviderUrl"
      required:
        - id
        - kind
        - client_id
        - display_name
        - scope
        - url
    ProviderPost:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/ProviderId"
        kind:
          $ref: "#/components/schemas/ProviderKind"
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        display_name:
          $ref: "#/components/schemas/DisplayName"
        scope:
          $ref: "#/components/schemas/ApiScope"
        url:
          $ref: "#/components/schemas/ProviderUrl"
      required:
        - id
        - kind
        - client_id
        - display_name
        - scope
        - url
    ProviderPatch:
      type: object
      additionalProperties: false
      properties:
        kind:
          $ref: "#/components/schemas/ProviderKind"
        client_id:
          $ref: "#/components/schemas/ClientId"
        client_secret:
          $ref: "#/components/schemas/ClientSecret"
        display_name:
          $ref: "#/components/schemas/DisplayName"
        scope:
          $ref: "#/components/schemas/ApiScope"
        url:
          $ref: "#/components/schemas/ProviderUrl"
    ConnectionList:
      type: array
      items:
        $ref: "#/components/schemas/Connection"
    Connection:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/Ulid"
        provider_id:
          $ref: "#/components/schemas/ProviderId"
        status:
          $ref: "#/components/schemas/ConnectionStatus"
      required:
        - id
        - provider_id
        - status
    ConnectedAccount:
      type: object
      additionalProperties: false
      properties:
        username:
          $ref: "#/components/schemas/Username"
        web_url:
          $ref: "#/components/schemas/WebUrl"
      required:
        - username
        - web_url
    Ulid:
      description: ULID identifier
      type: string
      minLength: 26
      maxLength: 26
      pattern: "^[A-Z0-9]{26}$"  # This is case-insensitive
    ProviderId:
      description: ID of a OAuth2 provider, e.g. "gitlab.com".
      type: string
      example: "some-id"
    ProviderKind:
      type: string
      enum:
        - "gitlab"
        - "github"
      example: "gitlab"
    ClientId:
      description: |
        Client ID or Application ID value. This is provided by
        the Resource Server when setting up a new OAuth2 Client.
      type: string
      example: "some-client-id"
    ClientSecret:
      description: |
        Client secret provided by the Resource Server when setting
        up a new OAuth2 Client.
      type: string
      example: "some-client-secret"
    DisplayName:
      type: string
      example: "my oauth2 application"
    ApiScope:
      type: string
      example: "api"
    ProviderUrl:
      description: |
        The base URL of the OAuth2 Resource Server, e.g. "https://gitlab.com".
      type: string
      example: "https://example.org"
    ConnectionStatus:
      type: string
      enum:
        - connected
        - pending
    Username:
      type: string
      example: "some-username"
    WebUrl:
      description: A URL which can be opened in a browser, i.e. a web page.
      type: string
      example: "https://example.org"
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              minimum: 0
              exclusiveMinimum: true
              example: 1404
            detail:
              type: string
              example: "A more detailed optional message showing what the problem was"
            message:
              type: string
              example: "Something went wrong - please try again later"
          required:
            - "code"
            - "message"
      required:
        - "error"
  responses:
    Error:
      description: The schema for all 4xx and 5xx responses
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
