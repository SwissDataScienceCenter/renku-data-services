---
apiVersion: shipwright.io/v1beta1
kind: BuildStrategy
metadata:
  name: renku-buildpacks-v2
spec:
  parameters:
    - name: platform-api-version
      description: The referenced version is the minimum version that all relevant buildpack implementations support.
      default: "0.12"
    - name: run-image
      description: The image to use as the base for all session images built with this strategy
      # default: "ghcr.io/swissdatasciencecenter/renku-frontend-buildpacks/base-image:0.0.6"
      default: "ghcr.io/swissdatasciencecenter/renku-frontend-buildpacks/base-image:0.0.7"
    - name: builder-image
      description: The buildpack builder image to use
      # default: "ghcr.io/swissdatasciencecenter/renku-frontend-buildpacks/selector:0.0.6"
      default: "ghcr.io/swissdatasciencecenter/renku-frontend-buildpacks/selector:0.0.7"
    - name: frontend
      description: Which frontend should be used in the image. Either "jupyterlab" or "vscodium".
      default: vscodium
  steps:
    - name: build-and-push
      image: $(params.builder-image)
      imagePullPolicy: IfNotPresent
      env:
        - name: CNB_PLATFORM_API
          value: $(params.platform-api-version)
        - name: BP_RENKU_FRONTENDS
          value: $(params.frontend)
        - name: PARAM_SOURCE_CONTEXT
          value: $(params.shp-source-context)
        - name: PARAM_OUTPUT_IMAGE
          value: $(params.shp-output-image)
        - name: PARAM_RUN_IMAGE
          value: $(params.run-image)
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -euo pipefail

          echo "> Processing environment variables..."
          ENV_DIR="/platform/env"

          envs=($(env))

          # Denying the creation of non required files from system environments.
          # The creation of a file named PATH (corresponding to PATH system environment)
          # caused failure for python source during pip install (https://github.com/Azure-Samples/python-docs-hello-world)
          block_list=("PATH" "HOSTNAME" "PWD" "_" "SHLVL" "HOME" "")

          for env in "${envs[@]}"; do
            blocked=false

            IFS='=' read -r key value string <<< "$env"

            for str in "${block_list[@]}"; do
              if [[ "$key" == "$str" ]]; then
                blocked=true
                break
              fi
            done

            if [ "$blocked" == "false" ]; then
              path="${ENV_DIR}/${key}"
              echo -n "$value" > "$path"
            fi
          done

          /cnb/lifecycle/creator \
            -app=${PARAM_SOURCE_CONTEXT} \
            -report=/tmp/report.toml \
            -run-image=${PARAM_RUN_IMAGE} \
            ${PARAM_OUTPUT_IMAGE}
      volumeMounts:
        - mountPath: /platform/env
          name: platform-env
      resources:
        limits:
          cpu: 4000m
          memory: 8Gi
        requests:
          cpu: 2000m
          memory: 4Gi
  volumes:
    - name: platform-env
      emptyDir: {}
  securityContext:
    runAsUser: 1001
    runAsGroup: 1000
