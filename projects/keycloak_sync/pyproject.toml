[tool.poetry]
name = "keycloak_sync"
version = "0.1.0"
description = ""
authors = ['Swiss Data Science Center <contact@datascience.ch>']
license = ""

packages = [
  { include = "renku_data_services/keycloak_sync", from = "../../bases" },
  { include = "renku_data_services/users", from = "../../components" },
  { include = "renku_data_services/errors", from = "../../components" },
  { include = "renku_data_services/base_api", from = "../../components" },
  { include = "renku_data_services/base_models", from = "../../components" },
  { include = "renku_data_services/users", from = "../../components" },
  { include = "renku_data_services/base_api", from = "../../components" },
  { include = "renku_data_services/message_queue", from = "../../components" },
  { include = "renku_data_services/db_config", from = "../../components" },
  { include = "renku_data_services/k8s", from = "../../components" },
  { include = "renku_data_services/user_preferences", from = "../../components" },
  { include = "renku_data_services/crc", from = "../../components" },
  { include = "renku_data_services/project", from = "../../components" },
  { include = "renku_data_services/authz", from = "../../components" },
  { include = "renku_data_services/storage", from = "../../components" },
  { include = "renku_data_services/namespace", from = "../../components" },
  { include = "renku_data_services/utils", from = "../../components" },
]

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.12.1"
pydantic = {extras = ["email"], version = "^2.6.4"}
requests = "^2.31.0"
sqlalchemy = "^2.0.23"
asyncpg = "^0.29.0"
sanic-ext = "^23.6.0"
psycopg = { extras = ["binary"], version = "^3.1.13" }
authlib = "^1.2.1"
sanic = "^23.6.0"
redis = "^5.0.1"
dataclasses-avroschema = "^0.57.0"
undictify = "^0.11.3"
kubernetes = "^26.1.0"
python-ulid = "^1.1.0"
deepmerge = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pyavro-gen = "^0.3.3"
fakeredis = "^2.21.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
