# generated by datamodel-codegen:
#   filename:  api.spec.yaml
#   timestamp: 2023-05-02T11:14:13+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Extra, Field

from schemas.base import BaseAPISpec


class Version(BaseAPISpec):
    version: str


class IntegerIds(BaseAPISpec):
    __root__: List[int] = Field(..., example=[1, 3, 5], min_items=1, unique_items=True)


class Error(BaseAPISpec):
    code: int = Field(..., example=1404, gt=0)
    detail: Optional[str] = Field(None, example="A more detailed optional message showing what the problem was")
    message: str = Field(..., example="Something went wrong - please try again later")


class ErrorResponse(BaseAPISpec):
    error: Error


class ResourceClass(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    name: str = Field(..., description="A name for a specific resource", example="the name of a resource", min_length=5)
    cpu: float = Field(..., description="Number of cpu cores", example=10, gt=0.0)
    memory: int = Field(..., description="Number of bytes", example=2000000000000, gt=0)
    gpu: int = Field(..., description="Number of GPUs", example=8, ge=0)
    storage: int = Field(..., description="Number of bytes", example=9000000000000000000000, gt=0)


class ResourceClassPatch(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = Field(
        None, description="A name for a specific resource", example="the name of a resource", min_length=5
    )
    cpu: Optional[float] = Field(None, description="Number of cpu cores", example=10, gt=0.0)
    memory: Optional[int] = Field(None, description="Number of bytes", example=2000000000000, gt=0)
    gpu: Optional[int] = Field(None, description="Number of GPUs", example=8, ge=0)
    storage: Optional[int] = Field(None, description="Number of bytes", example=9000000000000000000000, gt=0)


class ResourceClassPatchWithId(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = Field(
        None, description="A name for a specific resource", example="the name of a resource", min_length=5
    )
    cpu: Optional[float] = Field(None, description="Number of cpu cores", example=10, gt=0.0)
    memory: Optional[int] = Field(None, description="Number of bytes", example=2000000000000, gt=0)
    gpu: Optional[int] = Field(None, description="Number of GPUs", example=8, ge=0)
    storage: Optional[int] = Field(None, description="Number of bytes", example=9000000000000000000000, gt=0)
    id: int = Field(..., description="An integer ID used to identify different resources", example=1, ge=0)


class ResourceClassWithId(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    name: str = Field(..., description="A name for a specific resource", example="the name of a resource", min_length=5)
    cpu: float = Field(..., description="Number of cpu cores", example=10, gt=0.0)
    memory: int = Field(..., description="Number of bytes", example=2000000000000, gt=0)
    gpu: int = Field(..., description="Number of GPUs", example=8, ge=0)
    storage: int = Field(..., description="Number of bytes", example=9000000000000000000000, gt=0)
    id: int = Field(..., description="An integer ID used to identify different resources", example=1, ge=0)


class ResourceClassesWithIdItem(ResourceClass):
    id: int = Field(..., description="An integer ID used to identify different resources", example=1, ge=0)


class UserWithId(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    id: str = Field(
        ..., description="Keycloak user ID", example="123-keycloak-user-id-456", min_length=5, regex="^[A-Za-z0-9-]+$"
    )


class UsersWithId(BaseAPISpec):
    __root__: List[UserWithId] = Field(..., unique_items=True)


class Resources(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    cpu: float = Field(..., description="Number of cpu cores", example=10, gt=0.0)
    memory: int = Field(..., description="Number of bytes", example=2000000000000, gt=0)
    gpu: int = Field(..., description="Number of GPUs", example=8, ge=0)
    storage: int = Field(..., description="Number of bytes", example=9000000000000000000000, gt=0)


class ResourcesPatch(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    cpu: Optional[float] = Field(None, description="Number of cpu cores", example=10, gt=0.0)
    memory: Optional[int] = Field(None, description="Number of bytes", example=2000000000000, gt=0)
    gpu: Optional[int] = Field(None, description="Number of GPUs", example=8, ge=0)
    storage: Optional[int] = Field(None, description="Number of bytes", example=9000000000000000000000, gt=0)


class ResourcesPatchWithId(ResourcesPatch):
    id: int = Field(..., description="An integer ID used to identify different resources", example=1, ge=0)


class ResourcePool(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    quota: Resources
    classes: List[ResourceClass] = Field(..., min_items=1, unique_items=True)
    name: str = Field(..., description="A name for a specific resource", example="the name of a resource", min_length=5)


class ResourcePoolPatch(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    quota: Optional[ResourcesPatchWithId] = None
    classes: Optional[List[ResourceClassPatchWithId]] = Field(None, min_items=1, unique_items=True)
    name: Optional[str] = Field(
        None, description="A name for a specific resource", example="the name of a resource", min_length=5
    )


class ResourcePoolPut(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    quota: Resources
    classes: List[ResourceClassesWithIdItem] = Field(..., unique_items=True)
    name: str = Field(..., description="A name for a specific resource", example="the name of a resource", min_length=5)


class ResourcePoolWithId(BaseAPISpec):
    class Config:
        extra = Extra.forbid

    quota: Resources
    classes: List[ResourceClassWithId]
    name: str = Field(..., description="A name for a specific resource", example="the name of a resource", min_length=5)
    id: int = Field(..., description="An integer ID used to identify different resources", example=1, ge=0)


class ResourcePoolsWithId(BaseAPISpec):
    __root__: List[ResourcePoolWithId]
