[tool.poetry]
name = "renku-data-services"
version = "0.0.1"
description = "Collection of services that deal with data in Postgres."
authors = ["Swiss Data Science Center <contact@datascience.ch>"]
readme = "README.md"
license = "Apache License 2.0"
packages = [{include = "renku_crack", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
sanic = "^23.3.0"
pydantic = "^1.10.7"
datamodel-code-generator = "^0.17.2"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
black = "^23.3.0"
flake8 = "^6.0.0"
mypy = "^1.1.1"
isort = "^5.12.0"
pydocstyle = "^6.3.0"
pytest = "^7.2.2"
pytest-black = "^0.3.12"
pytest-cov = "^4.0.0"
flake8-pyproject = "^1.2.3"
pre-commit = "^3.2.2"
sanic-testing = "^23.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py36", "py37", "py38"]
include = '\.pyi?$'

[tool.pydocstyle]
add_ignore = ["D105", "D107", "D202", "D401"]
match = '(?!test_|apispec).*\.py'

[tool.bandit]
skips = ["B101", "B603", "B607", "B404"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120
src_paths = ["src", "tests"]

[tool.flake8]
max-line-length = 120
show-source = true
ignore = ["E121", "E126", "E203", "E226", "E231", "W503", "W504", "E121", "E126", "E203", "E226", "E231", "W503", "W504", "E121", "E126", "E203", "E226", "E231", "W503", "W504"]

[tool.pytest.ini_options]
addopts = "--black --cov --cov-report=term-missing -v"
doctest_optionflags = "ALLOW_UNICODE"
testpaths = ["src", "tests"]
markers = [
    "integration: mark a test as a integration.",
]
filterwarnings = [
    "ignore:<class 'pytest_black.BlackItem'> is not using a cooperative constructor:pytest.PytestDeprecationWarning",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning"
]

[tool.mypy]
python_version = "3.8"
files = [
    "src/**/*.py",
    "tests/**/*.py"
]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "src.schemas.apispec"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "sanic_testing.*",
]
ignore_missing_imports = true
