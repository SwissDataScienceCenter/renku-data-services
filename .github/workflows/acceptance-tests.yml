
name: Acceptance tests
permissions:
  contents: read
  pull-requests: read

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-deploy:
    name: Analyze deploy string
    runs-on: ubuntu-24.04
    outputs:
      renku: ${{ steps.deploy-comment.outputs.renku }}
      deploy: ${{ steps.deploy-comment.outputs.pr-contains-string }}
      renku-core: ${{ steps.deploy-comment.outputs.renku-core }}
      renku-gateway: ${{ steps.deploy-comment.outputs.renku-gateway }}
      renku-graph: ${{ steps.deploy-comment.outputs.renku-graph }}
      renku-notebooks: ${{ steps.deploy-comment.outputs.renku-notebooks }}
      renku-ui: ${{ steps.deploy-comment.outputs.renku-ui }}
      renku-data-services: ${{ steps.deploy-comment.outputs.renku-data-services }}
      amalthea: ${{ steps.deploy-comment.outputs.amalthea }}
      amalthea-sessions: ${{ steps.deploy-comment.outputs.amalthea-sessions }}
      test-enabled: ${{ steps.deploy-comment.outputs.test-enabled == 'true' }}
      test-legacy-enabled: ${{ steps.deploy-comment.outputs.test-legacy-enabled == 'true' }}
      extra-values: ${{ steps.deploy-comment.outputs.extra-values }}
    steps:
      - id: deploy-comment
        uses: SwissDataScienceCenter/renku-actions/check-pr-description@v1.19.0
        with:
          pr_ref: ${{ github.event.number }}

  deploy-pr:
    name: Deploy on Azure
    runs-on: ubuntu-24.04
    needs: [check-deploy]
    permissions:
      pull-requests: write
      id-token: write
    if: github.event.action != 'closed' && needs.check-deploy.outputs.deploy == 'true'
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          repository: SwissDataScienceCenter/renku
          sparse-checkout: |
            minimal-deployment

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.RENKU_DOCKER_USERNAME }}
          password: ${{ secrets.RENKU_DOCKER_PASSWORD }}

      - name: Find deployment url
        uses: peter-evans/find-comment@v3
        id: deploymentUrlMessage
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "RenkuBot"
          body-includes: "You can access the deployment of this PR at"

      - name: Create comment deployment url
        if: steps.deploymentUrlMessage.outputs.comment-id == 0
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            You can access the deployment of this PR at https://renku-ci-ds-${{ github.event.number }}.dev.renku.ch

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CI_RENKU_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CI_RENKU_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CI_RENKU_AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v4
        with:
          resource-group: "renku-dev"
          cluster-name: "aks-switzerlandnorth-renku-dev"

      - name: Get AKS credentials
        run: |
          mv "${KUBECONFIG}" "${{ github.workspace }}/renkubot-kube.config"
          echo "KUBECONFIG=${{ github.workspace }}/renkubot-kube.config" >> "$GITHUB_ENV"

      - name: Build and deploy
        uses: SwissDataScienceCenter/renku-actions/deploy-renku@v1.19.0
        env:
          DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
          GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
          RENKU_RELEASE: renku-ci-ds-${{ github.event.number }}
          RENKU_VALUES_FILE: "${{ github.workspace }}/values.yaml"
          RENKU_VALUES: minimal-deployment/minimal-deployment-values.yaml
          TEST_ARTIFACTS_PATH: "tests-artifacts-${{ github.sha }}"
          KUBERNETES_CLUSTER_FQDN: "dev.renku.ch"
          RENKU_ANONYMOUS_SESSIONS: "true"

          renku: "${{ needs.check-deploy.outputs.renku }}"
          renku_core: "${{ needs.check-deploy.outputs.renku-core }}"
          renku_gateway: "${{ needs.check-deploy.outputs.renku-gateway }}"
          renku_graph: "${{ needs.check-deploy.outputs.renku-graph }}"
          renku_notebooks: "${{ needs.check-deploy.outputs.renku-notebooks }}"
          renku_ui: "${{ needs.check-deploy.outputs.renku-ui }}"
          renku_data_services: "@${{ github.head_ref }}"
          amalthea: "${{ needs.check-deploy.outputs.amalthea }}"
          amalthea_sessions: "${{ needs.check-deploy.outputs.amalthea-sessions }}"
          extra_values: "${{ needs.check-deploy.outputs.extra-values }}"

  legacy-selenium-acceptance-tests:
    name: Legacy Selenium tests
    needs: [ check-deploy, deploy-pr ]
    if: github.event.action != 'closed' && needs.check-deploy.outputs.deploy == 'true' && needs.check-deploy.outputs.test-legacy-enabled == 'true'

    runs-on: ubuntu-24.04
    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.CI_RENKU_AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.CI_RENKU_AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.CI_RENKU_AZURE_SUBSCRIPTION_ID }}

    - uses: azure/aks-set-context@v4
      with:
        resource-group: "renku-dev"
        cluster-name: "aks-switzerlandnorth-renku-dev"

    - name: Get AKS credentials
      run: |
        mv "${KUBECONFIG}" "${{ github.workspace }}/renkubot-kube.config"
        echo "KUBECONFIG=${{ github.workspace }}/renkubot-kube.config" >> "$GITHUB_ENV"

    - uses: SwissDataScienceCenter/renku-actions/test-renku@v1.19.0
      with:
        kubeconfig: "${{ env.KUBECONFIG }}"
        renku-release: renku-ci-ds-${{ github.event.number }}
        gitlab-token: ${{ secrets.DEV_GITLAB_TOKEN }}
        s3-results-access-key: ${{ secrets.ACCEPTANCE_TESTS_BUCKET_ACCESS_KEY }}
        s3-results-secret-key: ${{ secrets.ACCEPTANCE_TESTS_BUCKET_SECRET_KEY }}
        test-timeout-mins: "60"

  legacy-cypress-acceptance-tests:
    name: Legacy Cypress tests
    runs-on: ubuntu-24.04
    needs: [check-deploy, deploy-pr]
    strategy:
      fail-fast: false
      matrix:
        tests:
          - publicProject
          - privateProject
          - updateProjects
          - testDatasets
          - useSession
          - checkWorkflows
          - rstudioSession
    steps:
      - name: Extract Renku repository reference
        run: echo "RENKU_REFERENCE=`echo '${{ needs.check-deploy.outputs.renku }}' | cut -d'@' -f2`" >> $GITHUB_ENV
      - uses: SwissDataScienceCenter/renku-actions/test-renku-cypress@v1.19.0
        if: github.event.action != 'closed' && needs.check-deploy.outputs.deploy == 'true' && needs.check-deploy.outputs.test-legacy-enabled == 'true'

        with:
          e2e-folder: cypress/e2e/v2/
          e2e-target: ${{ matrix.tests }}
          kubernetes-cluster-fqdn: dev.renku.ch
          renku-reference: ${{ env.RENKU_REFERENCE }}
          renku-release: renku-ci-ds-${{ github.event.number }}
          test-user-password: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}

  cypress-acceptance-tests:
    name: Cypress tests
    runs-on: ubuntu-24.04
    needs: [check-deploy, deploy-pr]
    if: github.event.action != 'closed' && needs.check-deploy.outputs.pr-contains-string == 'true' && needs.check-deploy.outputs.test-enabled == 'true'
    strategy:
      fail-fast: false
      matrix:
        tests:
          - anonymousNavigation
          - dashboardV2
          - groupBasics
          - projectBasics
          - projectResources
          - searchEntities
          - sessionBasics
    steps:
      - name: Extract Renku repository reference
        run: echo "RENKU_REFERENCE=`echo '${{ needs.check-deploy.outputs.renku }}' | cut -d'@' -f2`" >> $GITHUB_ENV
      - uses: SwissDataScienceCenter/renku-actions/test-renku-cypress@v1.19.0
        if: github.event.action != 'closed' && needs.check-deploy.outputs.deploy == 'true' && needs.check-deploy.outputs.test-enabled == 'true'
        with:
          e2e-folder: cypress/e2e/v2/
          e2e-target: ${{ matrix.tests }}
          kubernetes-cluster-fqdn: dev.renku.ch
          renku-reference: ${{ env.RENKU_REFERENCE }}
          renku-release: renku-ci-ds-${{ github.event.number }}
          test-user-password: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}

  cleanup:
    name: Cleanup
    runs-on: ubuntu-24.04
    needs: check-deploy
    if: github.event.action == 'closed' && needs.check-deploy.outputs.deploy == 'true'
    permissions:
      pull-requests: write
      id-token: write
    steps:
      - name: Find deployment url
        uses: peter-evans/find-comment@v3
        id: deploymentUrlMessage
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "RenkuBot"
          body-includes: "Tearing down the temporary RenkuLab deployment"

      - name: Create comment deployment url
        if: steps.deploymentUrlMessage.outputs.comment-id == 0
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Tearing down the temporary RenkuLab deployment for this PR.

      # Azure-specific setup
      - name: Azure login
        if: needs.check-deploy.outputs.deploy == 'true'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CI_RENKU_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CI_RENKU_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CI_RENKU_AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v4
        if: needs.check-deploy.outputs.deploy == 'true'
        with:
          resource-group: "renku-dev"
          cluster-name: "aks-switzerlandnorth-renku-dev"

      - name: Get AKS credentials
        if: needs.check-deploy.outputs.deploy == 'true'
        run: |
          mv "${KUBECONFIG}" "${{ github.workspace }}/renkubot-kube.config"
          echo "KUBECONFIG=${{ github.workspace }}/renkubot-kube.config" >> "$GITHUB_ENV"

      # Cleanup for both standard and Azure deployments
      - name: renku teardown
        uses: SwissDataScienceCenter/renku-actions/cleanup-renku-ci-deployments@v1.19.0
        env:
          HELM_RELEASE_REGEX: "^renku-ci-ds-${{ github.event.number }}$"
          GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
          MAX_AGE_SECONDS: 0
          DELETE_NAMESPACE: "true"
